.\" Automatically generated by Pandoc 2.5
.\"
.TH "GETSOCKOPT" "2" "" "Version 0.67" "Secure Socket API Documentation"
.hy
.SH NAME
.PP
getsockopt, setsockopt \- get and set TLS\-specific options on sockets
.SH SYNOPSIS
.PP
\f[B]#include <sys/types.h>\f[R]
.PD 0
.P
.PD
\f[B]#include <sys/socket.h>\f[R]
.PD 0
.P
.PD
\f[B]#include <in_tls.h>\f[R]
.PP
\f[B]int getsockopt(int\f[R] \f[I]sockfd\f[R]\f[B], int\f[R]
\f[I]level\f[R]\f[B], int\f[R] \f[I]optname\f[R]\f[B],\f[R]
.PD 0
.P
.PD
\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \f[B]void *\f[R]\f[I]optval\f[R]\f[B],
socklen_t *\f[R]\f[I]optlen\f[R]\f[B]);\f[R]
.SH DESCRIPTION
.PP
\f[B]getsockopt\f[R]() retrieves information both locally and within the
SSA daemon for the socket referred to by the file descriptor
\f[I]sockfd\f[R].
.PP
An additional protocol level (\f[B]IPPROTO_TLS\f[R]) has been added for
sockets utilizing the daemon\[en]it exists as a way for a programmer to
retrieve the TLS settings of a socket (such as enabled ciphersuites,
message padding features, and many other TLS\-specific features).
This constant can be used in \f[I]level\f[R] along with one of the
defined optnames for the TLS socket options (such as
\f[B]TLS_HOSTNAME\f[R] or \f[B]TLS_DISABLE_CIPHER\f[R]).
.PP
Some of the options given in IPPROTO_TLS only make sense at a certain
point in the lifecycle of a connection, such as retrieving a peer\[cq]s
certificate after connecting to an end host.
Any getsockopt\f[B]() function used at the wrong phase in a socket\[cq]s
life cycle will return the error code \f[R]EOPNOTSUPP**.
.PP
At the \f[B]IPPROTO_TLS\f[R] level, the options available for
\f[B]getsockopt\f[R]() are listed below:
.SS TLS getsockopt options:
.RS
.SS TLS_CONTEXT
.PP
Retrieves an identifier that allows a user to replicate the given
socket\[cq]s settings and session cache in another TLS socket.
.PP
A TLS Context is an ID that references the internal settings and session
cache of another socket.
It can be used to easily copy over applied settings from one socket to
many others, and it allows for session reuse when multiple client
sockets reuse the same TLS context.
It is best used by creating a socket that will remain unused for the
duration of the program, apply all desired settings to that socket, and
then get the TLS context of the socket and apply it to each connection
afterwards.
.PP
\f[C]optval\f[R] should point to an unsigned long that will be populated
with the TLS context ID of the socket being operated on, and
\f[C]optlen\f[R] should be equal to \f[C]sizeof(unsigned long)\f[R].
.PP
\f[B]RESTRICTIONS\f[R]
.PP
IMPORTANT: In cases where TLS contexts are used, NO settings (other than
TLS_HOSTNAME) should be modified for any sockets using the TLS context
once it has been shared with other sockets, as undefined behavior will
occur.
.PP
The option may not be used if the given socket is already listening,
connected or connecting, or if the socket has previously encountered an
unrecoverable error.
.PP
\f[B]ERRORS\f[R]
.IP \[bu] 2
\f[C]EBADFD\f[R] \- An unrecoverable error has previously occurred on
the socket.
.IP \[bu] 2
\f[C]EOPNOTSUPP\f[R] \- The given socket is already in use (see
\f[B]RESTRICTIONS\f[R]).
.IP \[bu] 2
\f[C]EINVAL\f[R] \- Bad input (\f[C]optval\f[R] isn\[cq]t a valid TLS
context ID, the socket associated with the context ID \f[C]optval\f[R]
has been closed, or \f[C]optlen\f[R] is not equal to
\f[C]sizeof(unsigned long)\f[R]).
.RE
.SH 
.RS
.SS TLS_SESSION_REUSE
.PP
Determines whether the given socket has session caching and reuse
enabled.
.PP
TLS Sessions store and save the private keys associated with a
connection so that a client may reconnect to a server at a future time
without performing a full handshake or re\-validating the server\[cq]s
certificate.
This allows for much faster handshake speeds.
.PP
\f[C]optval\f[R] should point to an integer value that will be populated
with either \f[C]0\f[R] or \f[C]1\f[R], and \f[C]optlen\f[R] should be
equal to \f[C]sizeof(int)\f[R].
.PP
\f[B]RESTRICTIONS\f[R]
.PP
This option may be used on any valid TLS file descriptor.
.PP
\f[B]ERRORS\f[R]
.IP \[bu] 2
\f[C]EINVAL\f[R] \- Bad input (\f[C]optval\f[R] was null, or
\f[C]optlen\f[R] not the right size/ null).
.RE
.SH 
.SS RETURN VALUE
.PP
\f[C]getsockopt()\f[R] return 0 on success, or \-1 if some error
occurred.
If \-1 is returned, \f[C]errno\f[R] will be set to an error code
specifying the reason that the function failed, and an error string may
be set for the TLS socket that can be retrieved via the
\f[C]TLS_ERROR\f[R] getsockopt option.
For a list of possible errno codes that may be returned, see the
\f[B]ERRORS\f[R] section in each option above.
